---
layout: package
title: Install
package: @PACKAGE_NAME@
---

@PACKAGE_NAME@ can be deployed as any other native PID package. To know more about PID methodology simply follow [this link](http://pid.lirmm.net/pid-framework).

PID provides different alternatives to install a package:

## Automatic install by dependencies declaration

The package @PACKAGE_NAME@ will be installed automatically if it is a direct or undirect dependency of one of the packages you are developing. See [how to import](use.html).

## Manual install using PID command

The package @PACKAGE_NAME@ can be installed "by hand" using command provided by the PID workspace:

{% highlight shell %}
cd <pid-workspace>
./pid deploy package=@PACKAGE_NAME@
{% endhighlight %}

Or if you want to install a specific binary version of this package, for instance for the last version:

{% highlight shell %}
cd <pid-workspace>
./pid deploy package=@PACKAGE_NAME@ version=@PACKAGE_LAST_VERSION_WITH_PATCH@
{% endhighlight %}

## Manual Installation

The last possible action is to install it by hand without using PID commands. This is **not recommended** but could be **helpfull to install another repository of this package (not the official package repository)**. For instance if you fork the official repository to work isolated from official developers you may need this alternative.

+ Cloning the official repository of @PACKAGE_NAME@ with git

{% highlight shell %}
cd <pid-workspace>/packages/ && git clone @OFFICIAL_REPOSITORY_ADDRESS@
{% endhighlight %}


or if your are involved in @PACKAGE_NAME@ development and forked the @PACKAGE_NAME@ official respository (using gitlab), you can prefer doing:


{% highlight shell %}
cd <pid-workspace>/packages/ && git clone @GIT_SERVER@:<your account>/@PACKAGE_NAME@.git
{% endhighlight %}

+ Building the repository

{% highlight shell %}
cd <pid-workspace>/packages/@PACKAGE_NAME@/build
cmake .. && cd ..
./pid build
{% endhighlight %}
